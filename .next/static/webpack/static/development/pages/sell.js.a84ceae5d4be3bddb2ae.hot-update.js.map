{"version":3,"file":"static/webpack/static/development/pages/sell.js.a84ceae5d4be3bddb2ae.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from './ErrorMessage';\n\n\nconst Center = styled.div`\n text-align:center;\n`;\nclass CreateItem extends Component{\n  state = {\n    title:\"test\",\n    description:\"test\",\n    image:\"test.png\",\n    largeImage:\"test.png\",\n    price:0\n  }\n  onChange = (e) =>{\n    const{name,value,type} = e.target;\n    const val = type === \"number\" ? parseFloat(value) : value;\n    this.setState({\n      [name]:val\n    });\n  }\n  uploadFile =async (e)=>{\n    //grab file\n    const files = e.target.files;\n    const data = new FormData();\n    //Prepare file to be 'POSTED' to cloudinary api\n    data.append('file',files[0]);\n    data.append('upload_preset','SickFiits');\n\n    const res = await fetch(\n      'https://api.cloudinary.com/v1_1/dhnbtmpj6/image/upload',{\n      method:'POST',\n      body:data\n    });\n\n    const json = res.json()\n    console.log(json);\n\n  }\n  render(){\n    return(\n      <Form>\n       <fieldset>\n        File\n        <label htmlFor=\"imgae\">\n         <input type=\"file\" onChange={this.uploadFile}\n         placeholder=\"Upload file\" requiredvalue={this.state.image}\n         id=\"image\" name=\"image\" />\n        </label>\n        Title\n        <label htmlFor=\"title\">\n         <input type=\"text\" onChange={this.onChange}\n         placeholder=\"title\" requiredvalue={this.state.title}\n         id=\"title\" name=\"title\" />\n        </label>\n        Price\n        <label htmlFor=\"price\">\n         <input type=\"number\" onChange={this.onChange}\n         placeholder=\"price\" requiredvalue={this.state.price}\n         id=\"price\" name=\"price\" />\n        </label>\n        <label>\n         Description\n         <textarea\n          onChange={this.onChange}\n          placeholder=\"price\" requiredvalue={this.state.description}\n          id=\"description\" name=\"description\"\n         />\n        </label>\n       </fieldset>\n      </Form>\n    )\n  }\n}\n\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAQA;AAMA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAlEA;AACA;AAqEA;;;;;A","sourceRoot":""}