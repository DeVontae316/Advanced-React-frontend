{"version":3,"file":"static/webpack/static/development/pages/signup.js.3502212a750b0b1a8e3a.hot-update.js","sources":["webpack:///./components/Signup.js"],"sourcesContent":["import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\n\nconst SIGN_UP_MUTATION = gql`\nmutation SIGN_UP_MUTATION($name:String! $password:String! $email:String!){\n  signup(name:$name password:$password email:$email){\n    id\n    name\n    email\n  }\n}\n`\n\n\nfunction Signup(props) {\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  /*  state = {\n     name: \"\",\n     password: \"\",\n     email: \"\"\n   } */\n  /* const onSubmit = async (e, signupMutation) => {\n    e.preventDefault();\n    await signupMutation({\n      variables: {\n         ...this.state,\n        name,\n        password,\n        email\n      }\n    });\n  } */\n  /* onChange = (e) => {\n    const { name, value, type } = e.target;\n    setName(value);\n    this.setState({\n      [name]: value\n    });\n  } */\n\n  return (\n    <Mutation refetchQueries={[{ query: CURRENT_USER_QUERY }]} mutation={SIGN_UP_MUTATION}>\n      {(signup, { loading, error }) => {\n        if (loading) <p>Loading...</p>\n\n        return <Form method=\"post\" onSubmit={\n          async (e) => {\n            e.preventDefault();\n\n            await signup();\n          }}\n        >\n          SIGN UP FOR AN ACCOUNT\n         <fieldset disabled={loading} aria-busy={loading}>\n            Name\n          <label htmlFor=\"name\">\n              <ErrorMessage error={error} />\n              <input type=\"text\"\n                onChange={(e) => setName(e.target.value)}\n                placeholder=\"Name\"\n                required value={name}\n                id=\"name\"\n                name=\"name\"\n              />\n            </label>\n        Email\n          <label htmlFor=\"email\">\n              <input type=\"text\"\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Email\"\n                required value={email}\n                id=\"email\"\n                name=\"email\"\n              />\n            </label>\n        Password\n            <label htmlFor=\"password\">\n              <input type=\"text\"\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Password\"\n                required value={password}\n                id=\"password\"\n                name=\"password\"\n              />\n            </label>\n            <button type=\"onSubmit\">Submit</button>\n          </fieldset>\n        </Form>\n      }}\n\n    </Mutation>\n\n  )\n}\n\n\nexport default Signup;\nexport { SIGN_UP_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;;;;;;AAKA;;;;;;;;;;;;AAWA;;;;;;;;;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AAEA;;;;;A","sourceRoot":""}