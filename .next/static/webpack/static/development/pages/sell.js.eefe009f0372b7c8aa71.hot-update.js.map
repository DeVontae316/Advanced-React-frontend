{"version":3,"file":"static/webpack/static/development/pages/sell.js.eefe009f0372b7c8aa71.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Mutation} from 'react-apollo';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from './ErrorMessage';\n\n\nconst Center = styled.div`\n text-align:center;\n`;\n\nconst CREATE_ITEM_MUTATION = gql`\n mutation CREATE_ITEM_MUTATION(\n   $description:String!\n   $title:String!\n   $price:Int!\n   $largeImage:String\n   $image:String\n ){\n   createItem(\n     description:$description\n     title:$title\n     price:$price\n     largeImage:$largeImage\n     image:$image\n   ){\n     id\n   }\n }\n`\nclass CreateItem extends Component{\n  state = {\n    title:'default',\n    description: 'default',\n    image: 'no.png',\n    largeImage: 'nope.png',\n    price:0\n  };\n\n  onChange = (e) =>{\n    const{name,value,type} = e.target;\n    const val = type === \"number\" ? parseFloat(value) : value;\n    this.setState({[name]:val});\n  };\n\n  uploadFile =  async (e) =>{\n    console.log('upload file');\n    const files = e.target.files//Filelist array\n    const data = new FormData();\n    data.append('file',files[0]);//First item user selected which is in the Filelist\n    data.append('upload_preset','SickFiits');\n\n    const res = await fetch\n    ('https://api.cloudinary.com/v1_1/dhnbtmpj6/image/upload',{\n      method:'POST',\n      body:data\n    }).then(res=> res.json())\n      .catch(error => console.error('Error:', error))\n      .then(res => console.log('Success:', JSON.stringify(res)));\n\n    //const file = await res.json();\n    console.log(file);\n\n    this.setState({\n      image:res.secure_url,\n      largeImage:fres.eager[0].secure_url\n    });\n  }\n  render(){\n    return(\n     <Mutation mutation={CREATE_ITEM_MUTATION } variables ={this.state}\n     >\n      {(createItem,{loading,error})=>(\n        <Form onSubmit={async e =>{\n          e.preventDefault();\n          const res = await createItem();\n          Router.push({\n            pathname:'/item',\n            query:{id:res.data.createItem.id}\n          })\n          console.log(res);\n        }}>\n        <ErrorMessage error={error} />\n         <fieldset disabled={loading} aria-busy={loading}>\n         File\n          <label htmlFor=\"file\">\n           <input onChange={this.uploadFile} placeholder=\"Upload a image\"\n           requiredvalue={this.state.image} id=\"file\" name=\"file\"\n           type=\"file\" />\n          </label>\n         Title\n          <label htmlFor=\"title\">\n           <input onChange={this.onChange} placeholder=\"title\"\n           requiredvalue={this.state.title} id=\"title\" name=\"title\"\n           type=\"text\" />\n          </label>\n          Price\n           <label htmlFor=\"price\">\n            <input onChange={this.onChange} placeholder=\"price\"\n            requiredvalue={this.state.price} id=\"price\" name=\"price\"\n            type=\"number\" />\n           </label>\n           Description\n            <label htmlFor=\"price\">\n             <textarea onChange={this.onChange} placeholder=\"description\"\n             requiredvalue={this.state.description}\n             id=\"description\" name=\"description\"\n             />\n            </label>\n            <button type=\"onSubmit\">Submit</button>\n         </fieldset>\n        </Form>\n\n      )}\n\n\n      </Mutation>\n    )\n  }\n}\n\n\n\n\n\n\n\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AAkBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AALA;AAAA;AASA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAdA;AAOA;AAQA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArCA;AA8CA;;;;AAxFA;AACA;AAiGA;;;;;A","sourceRoot":""}